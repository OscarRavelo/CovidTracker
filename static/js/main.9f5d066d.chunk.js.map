{"version":3,"sources":["Hooks/useContext.js","Components/GlobalCases/GlobalCases.js","Hooks/useFetch.js","Components/Loading/Loading.js","Components/GlobalDeaths/GlobalDeaths.js","Components/Header/Header.js","Components/CasesByCountry/CasesByCountry.js","Components/Countries/Countries.js","Components/Graph/Graph.js","Components/Map/MapView.js","App.js","index.js"],"names":["StateContext","createContext","GlobalCase","state","useContext","className","value","data","confirmed","useFetch","url","useState","setData","isFetching","setIsFetching","useEffect","a","fetch","then","r","json","j","f","fetchingData","style","width","height","opacity","margin","borderRadius","display","background","variants","start","scale","rotate","end","Loader","props","div","initial","animate","transition","repeat","repeatType","ease","duration","delay","GlobalDeaths","question","setQuestion","map","d","location","onClick","Header","CaseByCountry","Countries","countries","length","Graph","Object","keys","name","getOwnPropertyNames","top","right","left","bottom","strokeDasharray","dataKey","yAxisId","orientation","stroke","fill","MapView","MapContainer","center","lat","lng","zoom","scrollWheelZoom","TileLayer","attribution","App","locale","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f5d066d.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nconst StateContext = createContext(null);\r\n\r\nexport default StateContext;","import React, { useContext } from \"react\";\r\nimport StateContext from '../../Hooks/useContext';\r\nimport { FormattedNumber} from 'react-intl'\r\nimport './GlobalCases.css';\r\nconst GlobalCase = () => {\r\nconst state = useContext(StateContext);\r\n  return (\r\n    <div className=\"container GlobalCases-style\">\r\n   \r\n\r\n    \r\n        <div>\r\n          <h1>global cases</h1>\r\n          <p>\r\n          <FormattedNumber value={state.data.confirmed} />\r\n          </p>\r\n        </div>\r\n    \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalCase;\r\n","import {useState, useEffect} from 'react';\r\n\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [isFetching, setIsFetching] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchingData = async() => {\r\n             await fetch(url).then( r => r.json()).then( j => setData(j)).then( f => setIsFetching(true));\r\n        }\r\n        fetchingData();\r\n    }, [url, isFetching])\r\n\r\n   \r\n\r\n    return {\r\n        data,\r\n        isFetching\r\n    }\r\n\r\n}\r\n\r\nexport default useFetch;","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst style = {\r\n    width: 20,\r\n    height: 20,\r\n    opacity: 1,\r\n    margin: 8,\r\n    borderRadius: 0,\r\n    display: \"inline-block\",\r\n    background: \"#e9e9f4\",\r\n}\r\n  \r\nconst variants = {\r\n    start: {\r\n        scale: 0.2,\r\n        rotate: 0,\r\n    },\r\n    end: {\r\n        scale: 1,\r\n        rotate: 360,\r\n    },\r\n}\r\n\r\nexport default function Loader(props) {\r\n    return (\r\n        <div>\r\n          <motion.div\r\n                    style={style}\r\n                    variants={variants}\r\n                    initial={\"start\"}\r\n                    animate={\"end\"}\r\n                    transition={{    \r\n                      repeat: \"Infinity\",\r\n                      repeatType: \"reverse\",\r\n                      ease: \"anticipate\",\r\n                      duration: 1, \r\n                      delay: 0\r\n                    }}\r\n                />\r\n          <motion.div\r\n                    style={style}\r\n                    variants={variants}\r\n                    initial={\"start\"}\r\n                    animate={\"end\"}\r\n                    transition={{    \r\n                      repeat: \"Infinity\",\r\n                      repeatType: \"reverse\",\r\n                      ease: \"anticipate\",\r\n                      duration: 1, \r\n                      delay: 0.2\r\n                    }}\r\n                />\r\n          <motion.div\r\n                    style={style}\r\n                    variants={variants}\r\n                    initial={\"start\"}\r\n                    animate={\"end\"}\r\n                    transition={{    \r\n                      repeat: \"Infinity\",\r\n                      repeatType: \"reverse\",\r\n                      ease: \"anticipate\",\r\n                      duration: 1, \r\n                      delay: 0.4\r\n                    }}\r\n                />\r\n          <motion.div\r\n                    style={style}\r\n                    variants={variants}\r\n                    initial={\"start\"}\r\n                    animate={\"end\"}\r\n                    transition={{    \r\n                      repeat: \"Infinity\",\r\n                      repeatType: \"reverse\",\r\n                      ease: \"anticipate\",\r\n                      duration: 1, \r\n                      delay: 0.6\r\n                    }}\r\n                />\r\n          <motion.div\r\n                    style={style}\r\n                    variants={variants}\r\n                    initial={\"start\"}\r\n                    animate={\"end\"}\r\n                    transition={{    \r\n                      repeat: \"Infinity\",\r\n                      repeatType: \"reverse\",\r\n                      ease: \"anticipate\",\r\n                      duration: 1, \r\n                      delay: 0.8\r\n                    }}\r\n                />    \r\n        </div>\r\n    )\r\n}","import React, { useContext,  useState } from \"react\";\r\nimport useFetch from \"../../Hooks/useFetch\";\r\nimport StateContext from \"../../Hooks/useContext\";\r\nimport './GlobalDeaths.css';\r\nimport Loader from  '../Loading/Loading';\r\nimport { FormattedNumber } from \"react-intl\";\r\nconst GlobalDeaths = () => {\r\n  const state = useContext(StateContext);\r\n  const [question, setQuestion] = useState(\"deaths\");\r\n  const {data, isFetching} = useFetch(\"https://covid2019-api.herokuapp.com/v2/current\");\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"container GlobalScore\">\r\n    \r\n    <div className={` GlobalScore-data ${question}`} >\r\n      <h1> global {question} </h1> <h2>\r\n      <FormattedNumber value={state.data[question]} />\r\n      </h2>\r\n      <ul>\r\n\r\n      {\r\n        isFetching ? \r\n        data.data.map( d => {\r\n            return (<li key={d.location}><FormattedNumber value={d[question]} /> <strong>{question}</strong> {d.location}</li>) \r\n        }) : (<Loader />)\r\n      }\r\n      </ul>\r\n      <div>\r\n      </div>\r\n    </div>\r\n          <button onClick={ () => setQuestion(\"deaths\")}>Deaths</button> <button onClick={ () => setQuestion(\"recovered\")}  >Recovered</button>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default GlobalDeaths;\r\n","import './Header.css';\r\n\r\nconst Header = () => (\r\n    <header>\r\n    <div>\r\n\r\n        <h1>covid tracker by Oscar Ravelo</h1>\r\n    </div>\r\n\r\n    </header>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\nimport { FormattedNumber } from 'react-intl';\r\nimport useFetch from '../../Hooks/useFetch';\r\nimport Loader from '../Loading/Loading';\r\nimport './CasesByCountry.css';\r\n\r\n\r\n\r\nconst CaseByCountry = () => {\r\n  const {data, isFetching} =  useFetch(\"https://covid2019-api.herokuapp.com/v2/current\");\r\n    return(<div className=\"CasesByCountry container \">\r\n        <h1>Confirmed Cases by Country/Region</h1>\r\n        {\r\n            isFetching ? (<div>\r\n                <ul>\r\n\r\n                {data.data.map( d => (<li key={d.location}><FormattedNumber value={d.confirmed} /> confirmed {d.location}</li>))}\r\n                </ul>\r\n            </div>) : (<Loader />)\r\n        }\r\n    </div>)\r\n}\r\n\r\nexport default CaseByCountry;","import React from 'react';\r\nimport useFetch from '../../Hooks/useFetch';\r\nimport Loader from '../Loading/Loading';\r\nimport './Countries.css';\r\n\r\nconst Countries = () => {\r\n  const {data, isFetching} =   useFetch(\"https://covid2019-api.herokuapp.com/countries\")\r\n    return(<div className=\"container contries\">\r\n        <h1>Countries/Regions</h1>\r\n        {\r\n            \r\n            isFetching ? (<div>\r\n                <p>{data.countries.length}</p>\r\n            </div>) : (<Loader />)\r\n        }\r\n    </div>);\r\n}\r\n\r\nexport default Countries;","import React from \"react\";\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from \"recharts\";\r\nimport useFetch from \"../../Hooks/useFetch\";\r\nimport Loader from '../Loading/Loading';\r\n\r\nconst Graph = () => {\r\n  const { data, isFetching } = useFetch(\r\n    \"https://covid2019-api.herokuapp.com/v2/timeseries/global\"\r\n  );\r\n  const dataGrap = () => {\r\n    const header = data.data.map((r) => {\r\n        return {\r\n          ...r[Object.keys(r)[0]],\r\n          \r\n          name: Object.getOwnPropertyNames(r)[0],\r\n        };\r\n\r\n    });\r\n    return header;\r\n\r\n  }\r\n\r\n \r\n  return (\r\n    <div className=\"graph-container\">\r\n      {isFetching ? (\r\n        <div >\r\n\r\n        <BarChart\r\n        width={800}\r\n        height={300}\r\n        data={dataGrap()}\r\n        margin={{\r\n          top: 20, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis yAxisId=\"left\" orientation=\"left\" stroke=\"#8884d8\" />\r\n        <YAxis yAxisId=\"right\" orientation=\"right\" stroke=\"#82ca9d\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar yAxisId=\"right\" dataKey=\"deaths\" fill=\"red\" />\r\n        <Bar yAxisId=\"left\" dataKey=\"recovered\" fill=\"#8884d8\" />\r\n        <Bar yAxisId=\"right\" dataKey=\"confirmed\" fill=\"#82ca9d\" />\r\n      </BarChart>\r\n        \r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import React from 'react';\r\nimport {MapContainer, TileLayer } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport MapCases from './MapCases';\r\n\r\nconst MapView = () => {\r\n    return (\r\n        <div className=\"map_grid_container\"  >\r\n\r\n        <MapContainer center={{lat: \"61.477065\", lng: \"21.791781\"}} zoom={3} scrollWheelZoom={false}  >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {/* {<MapCases />} */}\r\n        \r\n      \r\n      </MapContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapView;","import \"./App.css\";\nimport GlobalCase from \"./Components/GlobalCases/GlobalCases\";\nimport GlobalDeaths from \"./Components/GlobalDeaths/GlobalDeaths\";\nimport Header from \"./Components/Header/Header\";\nimport StateContext from \"./Hooks/useContext\";\nimport useFetch from \"./Hooks/useFetch\";\nimport CaseByCountry from \"./Components/CasesByCountry/CasesByCountry\";\nimport Countries from \"./Components/Countries/Countries\";\nimport Graph from \"./Components/Graph/Graph\";\nimport Loader from \"./Components/Loading/Loading\";\nimport {  IntlProvider} from 'react-intl'\nimport MapView from \"./Components/Map/MapView\";\nfunction App() {\n  const { data, isFetching } = useFetch(\"https://covid2019-api.herokuapp.com/v2/total\");\n\n  return (\n    <div className=\"App\">\n    <IntlProvider locale=\"en\" >\n      <Header />\n      \n      {isFetching ? (\n          <StateContext.Provider value={data}>\n        <div className=\"App-gridcontainer\">\n            <GlobalCase />\n            <GlobalDeaths />\n        <MapView  />\n          <CaseByCountry />\n          <Countries />\n            <Graph />\n        </div>\n          </StateContext.Provider>\n      ) : (\n        <Loader />\n      )}\n    </IntlProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}